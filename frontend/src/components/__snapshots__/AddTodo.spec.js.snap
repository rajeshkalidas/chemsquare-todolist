// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddTodo it renders Addtodo compo buttons with the first one active 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UNDEFINED />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <WithStyles(Grid)
        container={true}
      >
        <WithStyles(Grid)
          item={true}
          md={11}
          style={
            Object {
              "paddingRight": 16,
            }
          }
          xs={10}
        >
          <TextField
            fullWidth={true}
            placeholder="Add Todo here"
            required={false}
            select={false}
            variant="standard"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          md={1}
          xs={2}
        >
          <WithStyles(Button)
            color="secondary"
            fullWidth={true}
            variant="outlined"
          >
            Add
          </WithStyles(Button)>
        </WithStyles(Grid)>
      </WithStyles(Grid)>,
      "class": "inner-container",
      "style": Object {
        "margin": 16,
        "padding": 16,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(Grid)
            item={true}
            md={11}
            style={
              Object {
                "paddingRight": 16,
              }
            }
            xs={10}
          >
            <TextField
              fullWidth={true}
              placeholder="Add Todo here"
              required={false}
              select={false}
              variant="standard"
            />
          </WithStyles(Grid)>,
          <WithStyles(Grid)
            item={true}
            md={1}
            xs={2}
          >
            <WithStyles(Button)
              color="secondary"
              fullWidth={true}
              variant="outlined"
            >
              Add
            </WithStyles(Button)>
          </WithStyles(Grid)>,
        ],
        "container": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <TextField
              fullWidth={true}
              placeholder="Add Todo here"
              required={false}
              select={false}
              variant="standard"
            />,
            "item": true,
            "md": 11,
            "style": Object {
              "paddingRight": 16,
            },
            "xs": 10,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "fullWidth": true,
              "onChange": undefined,
              "onKeyPress": undefined,
              "placeholder": "Add Todo here",
              "required": false,
              "select": false,
              "value": undefined,
              "variant": "standard",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(Button)
              color="secondary"
              fullWidth={true}
              variant="outlined"
            >
              Add
            </WithStyles(Button)>,
            "item": true,
            "md": 1,
            "xs": 2,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Add",
              "color": "secondary",
              "fullWidth": true,
              "onClick": undefined,
              "variant": "outlined",
            },
            "ref": null,
            "rendered": "Add",
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <WithStyles(Grid)
          container={true}
        >
          <WithStyles(Grid)
            item={true}
            md={11}
            style={
              Object {
                "paddingRight": 16,
              }
            }
            xs={10}
          >
            <TextField
              fullWidth={true}
              placeholder="Add Todo here"
              required={false}
              select={false}
              variant="standard"
            />
          </WithStyles(Grid)>
          <WithStyles(Grid)
            item={true}
            md={1}
            xs={2}
          >
            <WithStyles(Button)
              color="secondary"
              fullWidth={true}
              variant="outlined"
            >
              Add
            </WithStyles(Button)>
          </WithStyles(Grid)>
        </WithStyles(Grid)>,
        "class": "inner-container",
        "style": Object {
          "margin": 16,
          "padding": 16,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Grid)
              item={true}
              md={11}
              style={
                Object {
                  "paddingRight": 16,
                }
              }
              xs={10}
            >
              <TextField
                fullWidth={true}
                placeholder="Add Todo here"
                required={false}
                select={false}
                variant="standard"
              />
            </WithStyles(Grid)>,
            <WithStyles(Grid)
              item={true}
              md={1}
              xs={2}
            >
              <WithStyles(Button)
                color="secondary"
                fullWidth={true}
                variant="outlined"
              >
                Add
              </WithStyles(Button)>
            </WithStyles(Grid)>,
          ],
          "container": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TextField
                fullWidth={true}
                placeholder="Add Todo here"
                required={false}
                select={false}
                variant="standard"
              />,
              "item": true,
              "md": 11,
              "style": Object {
                "paddingRight": 16,
              },
              "xs": 10,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "fullWidth": true,
                "onChange": undefined,
                "onKeyPress": undefined,
                "placeholder": "Add Todo here",
                "required": false,
                "select": false,
                "value": undefined,
                "variant": "standard",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(Button)
                color="secondary"
                fullWidth={true}
                variant="outlined"
              >
                Add
              </WithStyles(Button)>,
              "item": true,
              "md": 1,
              "xs": 2,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Add",
                "color": "secondary",
                "fullWidth": true,
                "onClick": undefined,
                "variant": "outlined",
              },
              "ref": null,
              "rendered": "Add",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`AddTodo it renders Addtodo component with button and input 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UNDEFINED />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <WithStyles(Grid)
        container={true}
      >
        <WithStyles(Grid)
          item={true}
          md={11}
          style={
            Object {
              "paddingRight": 16,
            }
          }
          xs={10}
        >
          <TextField
            fullWidth={true}
            placeholder="Add Todo here"
            required={false}
            select={false}
            variant="standard"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          md={1}
          xs={2}
        >
          <WithStyles(Button)
            color="secondary"
            fullWidth={true}
            variant="outlined"
          >
            Add
          </WithStyles(Button)>
        </WithStyles(Grid)>
      </WithStyles(Grid)>,
      "class": "inner-container",
      "style": Object {
        "margin": 16,
        "padding": 16,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(Grid)
            item={true}
            md={11}
            style={
              Object {
                "paddingRight": 16,
              }
            }
            xs={10}
          >
            <TextField
              fullWidth={true}
              placeholder="Add Todo here"
              required={false}
              select={false}
              variant="standard"
            />
          </WithStyles(Grid)>,
          <WithStyles(Grid)
            item={true}
            md={1}
            xs={2}
          >
            <WithStyles(Button)
              color="secondary"
              fullWidth={true}
              variant="outlined"
            >
              Add
            </WithStyles(Button)>
          </WithStyles(Grid)>,
        ],
        "container": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <TextField
              fullWidth={true}
              placeholder="Add Todo here"
              required={false}
              select={false}
              variant="standard"
            />,
            "item": true,
            "md": 11,
            "style": Object {
              "paddingRight": 16,
            },
            "xs": 10,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "fullWidth": true,
              "onChange": undefined,
              "onKeyPress": undefined,
              "placeholder": "Add Todo here",
              "required": false,
              "select": false,
              "value": undefined,
              "variant": "standard",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(Button)
              color="secondary"
              fullWidth={true}
              variant="outlined"
            >
              Add
            </WithStyles(Button)>,
            "item": true,
            "md": 1,
            "xs": 2,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Add",
              "color": "secondary",
              "fullWidth": true,
              "onClick": undefined,
              "variant": "outlined",
            },
            "ref": null,
            "rendered": "Add",
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <WithStyles(Grid)
          container={true}
        >
          <WithStyles(Grid)
            item={true}
            md={11}
            style={
              Object {
                "paddingRight": 16,
              }
            }
            xs={10}
          >
            <TextField
              fullWidth={true}
              placeholder="Add Todo here"
              required={false}
              select={false}
              variant="standard"
            />
          </WithStyles(Grid)>
          <WithStyles(Grid)
            item={true}
            md={1}
            xs={2}
          >
            <WithStyles(Button)
              color="secondary"
              fullWidth={true}
              variant="outlined"
            >
              Add
            </WithStyles(Button)>
          </WithStyles(Grid)>
        </WithStyles(Grid)>,
        "class": "inner-container",
        "style": Object {
          "margin": 16,
          "padding": 16,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Grid)
              item={true}
              md={11}
              style={
                Object {
                  "paddingRight": 16,
                }
              }
              xs={10}
            >
              <TextField
                fullWidth={true}
                placeholder="Add Todo here"
                required={false}
                select={false}
                variant="standard"
              />
            </WithStyles(Grid)>,
            <WithStyles(Grid)
              item={true}
              md={1}
              xs={2}
            >
              <WithStyles(Button)
                color="secondary"
                fullWidth={true}
                variant="outlined"
              >
                Add
              </WithStyles(Button)>
            </WithStyles(Grid)>,
          ],
          "container": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TextField
                fullWidth={true}
                placeholder="Add Todo here"
                required={false}
                select={false}
                variant="standard"
              />,
              "item": true,
              "md": 11,
              "style": Object {
                "paddingRight": 16,
              },
              "xs": 10,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "fullWidth": true,
                "onChange": undefined,
                "onKeyPress": undefined,
                "placeholder": "Add Todo here",
                "required": false,
                "select": false,
                "value": undefined,
                "variant": "standard",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(Button)
                color="secondary"
                fullWidth={true}
                variant="outlined"
              >
                Add
              </WithStyles(Button)>,
              "item": true,
              "md": 1,
              "xs": 2,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Add",
                "color": "secondary",
                "fullWidth": true,
                "onClick": undefined,
                "variant": "outlined",
              },
              "ref": null,
              "rendered": "Add",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`AddTodo it renders three buttons with the first one active 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UNDEFINED />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <WithStyles(Grid)
        container={true}
      >
        <WithStyles(Grid)
          item={true}
          md={11}
          style={
            Object {
              "paddingRight": 16,
            }
          }
          xs={10}
        >
          <TextField
            fullWidth={true}
            placeholder="Add Todo here"
            required={false}
            select={false}
            variant="standard"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          md={1}
          xs={2}
        >
          <WithStyles(Button)
            color="secondary"
            fullWidth={true}
            variant="outlined"
          >
            Add
          </WithStyles(Button)>
        </WithStyles(Grid)>
      </WithStyles(Grid)>,
      "class": "inner-container",
      "style": Object {
        "margin": 16,
        "padding": 16,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(Grid)
            item={true}
            md={11}
            style={
              Object {
                "paddingRight": 16,
              }
            }
            xs={10}
          >
            <TextField
              fullWidth={true}
              placeholder="Add Todo here"
              required={false}
              select={false}
              variant="standard"
            />
          </WithStyles(Grid)>,
          <WithStyles(Grid)
            item={true}
            md={1}
            xs={2}
          >
            <WithStyles(Button)
              color="secondary"
              fullWidth={true}
              variant="outlined"
            >
              Add
            </WithStyles(Button)>
          </WithStyles(Grid)>,
        ],
        "container": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <TextField
              fullWidth={true}
              placeholder="Add Todo here"
              required={false}
              select={false}
              variant="standard"
            />,
            "item": true,
            "md": 11,
            "style": Object {
              "paddingRight": 16,
            },
            "xs": 10,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "fullWidth": true,
              "onChange": undefined,
              "onKeyPress": undefined,
              "placeholder": "Add Todo here",
              "required": false,
              "select": false,
              "value": undefined,
              "variant": "standard",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(Button)
              color="secondary"
              fullWidth={true}
              variant="outlined"
            >
              Add
            </WithStyles(Button)>,
            "item": true,
            "md": 1,
            "xs": 2,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Add",
              "color": "secondary",
              "fullWidth": true,
              "onClick": undefined,
              "variant": "outlined",
            },
            "ref": null,
            "rendered": "Add",
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <WithStyles(Grid)
          container={true}
        >
          <WithStyles(Grid)
            item={true}
            md={11}
            style={
              Object {
                "paddingRight": 16,
              }
            }
            xs={10}
          >
            <TextField
              fullWidth={true}
              placeholder="Add Todo here"
              required={false}
              select={false}
              variant="standard"
            />
          </WithStyles(Grid)>
          <WithStyles(Grid)
            item={true}
            md={1}
            xs={2}
          >
            <WithStyles(Button)
              color="secondary"
              fullWidth={true}
              variant="outlined"
            >
              Add
            </WithStyles(Button)>
          </WithStyles(Grid)>
        </WithStyles(Grid)>,
        "class": "inner-container",
        "style": Object {
          "margin": 16,
          "padding": 16,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Grid)
              item={true}
              md={11}
              style={
                Object {
                  "paddingRight": 16,
                }
              }
              xs={10}
            >
              <TextField
                fullWidth={true}
                placeholder="Add Todo here"
                required={false}
                select={false}
                variant="standard"
              />
            </WithStyles(Grid)>,
            <WithStyles(Grid)
              item={true}
              md={1}
              xs={2}
            >
              <WithStyles(Button)
                color="secondary"
                fullWidth={true}
                variant="outlined"
              >
                Add
              </WithStyles(Button)>
            </WithStyles(Grid)>,
          ],
          "container": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TextField
                fullWidth={true}
                placeholder="Add Todo here"
                required={false}
                select={false}
                variant="standard"
              />,
              "item": true,
              "md": 11,
              "style": Object {
                "paddingRight": 16,
              },
              "xs": 10,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "fullWidth": true,
                "onChange": undefined,
                "onKeyPress": undefined,
                "placeholder": "Add Todo here",
                "required": false,
                "select": false,
                "value": undefined,
                "variant": "standard",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(Button)
                color="secondary"
                fullWidth={true}
                variant="outlined"
              >
                Add
              </WithStyles(Button)>,
              "item": true,
              "md": 1,
              "xs": 2,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Add",
                "color": "secondary",
                "fullWidth": true,
                "onClick": undefined,
                "variant": "outlined",
              },
              "ref": null,
              "rendered": "Add",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`Layout it renders three buttons with the first one active 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UNDEFINED />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <UNDEFINED
          title="CHEMSQUARE TODO APP"
        />,
        undefined,
      ],
      "elevation": 0,
      "style": Object {
        "backgroundColor": "#fafafa",
        "margin": 0,
        "padding": 0,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "title": "CHEMSQUARE TODO APP",
        },
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.memo),
          "compare": null,
          "type": [Function],
        },
      },
      undefined,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <UNDEFINED
            title="CHEMSQUARE TODO APP"
          />,
          undefined,
        ],
        "elevation": 0,
        "style": Object {
          "backgroundColor": "#fafafa",
          "margin": 0,
          "padding": 0,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "title": "CHEMSQUARE TODO APP",
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
        },
        undefined,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
